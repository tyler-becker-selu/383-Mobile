@model EmployeeClient.Models.ViewModels.EditGameViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(m => m.URL, new { @id = "gameURL" });
    <div class="form-horizontal">
        <h4>Game</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.GameName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GameName, new { htmlAttributes = new { @class = "form-control", @id = "name" } })
                @Html.ValidationMessageFor(model => model.GameName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReleaseDate, new { htmlAttributes = new { @class = "form-control", @id = "releaseDate" } })
                @Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @id = "price" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InventoryStock, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InventoryStock, new { htmlAttributes = new { @class = "form-control", @id = "inventory" } })
                @Html.ValidationMessageFor(model => model.InventoryStock, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="container" style="margin-top:20px;">
            <div class="row">
                <div class="col-xs-6">
                    <h3 class="text-center">Tags</h3>
                    <div class="well" style="max-height: 300px;overflow: auto;">
                        <ul class="list-group checked-list-box" id="tags">
                            @foreach (EmployeeClient.Models.Tag item in Model.dbTags)
                            {
                                if (Model.Tags.Find(x => x.Id == item.Id) != null)
                                {
                                    <li class="list-group-item list-group-item-primary active" data-checked="true" style="cursor: pointer;" id="@item.Id">@item.Name</li>
                                }
                                else
                                {
                                    <li class="list-group-item" id="@item.Id">@item.Name</li>
                                }

                            }

                        </ul>
                    </div>
                </div>

                <div class="col-xs-6">
                    <h3 class="text-center">Genres</h3>
                    <div class="well" style="max-height: 300px;overflow: auto;">
                        <ul class="list-group checked-list-box" id="genres">
                            @foreach (EmployeeClient.Models.Genre item in Model.dbGenres)
                            {
                                if (Model.Genres.Find(x => x.Id == item.Id) != null)
                                {
                                    <li class="list-group-item list-group-item-primary active" data-checked="true" style="cursor: pointer;" id="@item.Id">@item.Name</li>
                                }
                                else
                                {
                                    <li class="list-group-item" id="@item.Id">@item.Name</li>
                                }
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input onclick="editGame(@Model.Id)" value="Save" class="btn btn-primary pull-right" />
            </div>
        </div>
    </div>
}
<script src="~/Scripts/CustomScripts/Game.js"></script>
<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
